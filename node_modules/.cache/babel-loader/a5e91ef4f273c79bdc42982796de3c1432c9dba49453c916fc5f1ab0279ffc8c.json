{"ast":null,"code":"var _jsxFileName = \"/Users/ryanlacey/Documents/GitHub/ryans_puzzles/src/components/WordSearchGrid.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordSearchGrid = ({\n  grid,\n  wordPositions\n}) => {\n  // Function to check if a cell belongs to a word\n  console.log(\"grid from withing componnetn:\", typeof grid);\n  const belongsToWord = (x, y) => {\n    return wordPositions.some(word => {\n      return x >= word.startX && x <= word.endX && y >= word.startY && y <= word.endY;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-container\",\n    children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-row\",\n      children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `grid-cell ${cell.belongsTo ? 'word' : ''}`,\n        children: cell.letter\n      }, colIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_c = WordSearchGrid;\nexport default WordSearchGrid;\nvar _c;\n$RefreshReg$(_c, \"WordSearchGrid\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","WordSearchGrid","grid","wordPositions","console","log","belongsToWord","x","y","some","word","startX","endX","startY","endY","className","children","map","row","rowIndex","cell","colIndex","belongsTo","letter","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ryanlacey/Documents/GitHub/ryans_puzzles/src/components/WordSearchGrid.js"],"sourcesContent":["import React from 'react';\n\nconst WordSearchGrid = ({ grid, wordPositions }) => {\n    // Function to check if a cell belongs to a word\n    console.log(\"grid from withing componnetn:\", typeof (grid))\n    const belongsToWord = (x, y) => {\n        return wordPositions.some(word => {\n            return (\n                x >= word.startX && x <= word.endX &&\n                y >= word.startY && y <= word.endY\n            );\n        });\n    };\n\n    return (\n        <div className=\"grid-container\">\n            {grid.map((row, rowIndex) => (\n                <div key={rowIndex} className=\"grid-row\">\n                    {row.map((cell, colIndex) => (\n                        <div\n                            key={colIndex}\n                            className={`grid-cell ${cell.belongsTo ? 'word' : ''}`}\n                        >\n                            {cell.letter}\n                        </div>\n                    ))}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default WordSearchGrid;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAc,CAAC,KAAK;EAChD;EACAC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAE,OAAQH,IAAK,CAAC;EAC3D,MAAMI,aAAa,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;IAC5B,OAAOL,aAAa,CAACM,IAAI,CAACC,IAAI,IAAI;MAC9B,OACIH,CAAC,IAAIG,IAAI,CAACC,MAAM,IAAIJ,CAAC,IAAIG,IAAI,CAACE,IAAI,IAClCJ,CAAC,IAAIE,IAAI,CAACG,MAAM,IAAIL,CAAC,IAAIE,IAAI,CAACI,IAAI;IAE1C,CAAC,CAAC;EACN,CAAC;EAED,oBACId,OAAA;IAAKe,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC1Bd,IAAI,CAACe,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,kBACpBnB,OAAA;MAAoBe,SAAS,EAAC,UAAU;MAAAC,QAAA,EACnCE,GAAG,CAACD,GAAG,CAAC,CAACG,IAAI,EAAEC,QAAQ,kBACpBrB,OAAA;QAEIe,SAAS,EAAG,aAAYK,IAAI,CAACE,SAAS,GAAG,MAAM,GAAG,EAAG,EAAE;QAAAN,QAAA,EAEtDI,IAAI,CAACG;MAAM,GAHPF,QAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIZ,CACR;IAAC,GARIR,QAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASb,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACC,EAAA,GA5BI3B,cAAc;AA8BpB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
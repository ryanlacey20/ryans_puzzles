{"ast":null,"code":"var _jsxFileName = \"/Users/ryanlacey/Documents/GitHub/ryans_puzzles/src/components/WordSearchCell.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './WordSearchGrid.css';\nimport WordSearchCell from './WordSearchCell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordSearchGrid = ({\n  grid,\n  wordPositions\n}) => {\n  _s();\n  const [selectedCells, setSelectedCells] = useState([]);\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const toggleCellSelection = (x, y) => {\n    const cellIndex = selectedCells.findIndex(cell => cell.x === x && cell.y === y);\n    if (cellIndex === -1) {\n      setSelectedCells([...selectedCells, {\n        x,\n        y\n      }]);\n    } else {\n      setSelectedCells(selectedCells.filter(cell => cell.x !== x || cell.y !== y));\n    }\n  };\n  const handleMouseDown = () => {\n    setIsMouseDown(true);\n  };\n  const handleMouseUp = () => {\n    setIsMouseDown(false);\n  };\n  const handleMouseMove = (x, y) => {\n    if (isMouseDown) {\n      toggleCellSelection(x, y);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-container\",\n    children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-row\",\n      children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onMouseDown: handleMouseDown,\n        onMouseUp: handleMouseUp,\n        onMouseMove: () => handleMouseMove(cell.x, cell.y),\n        children: /*#__PURE__*/_jsxDEV(WordSearchCell, {\n          cell: cell,\n          isSelected: selectedCells.some(selectedCell => selectedCell.x === cell.x && selectedCell.y === cell.y)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this)\n      }, colIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(WordSearchGrid, \"si7+Ik1Kxrz/ONK7ee9AXdvtCsM=\");\n_c = WordSearchGrid;\nexport default WordSearchGrid;\nvar _c;\n$RefreshReg$(_c, \"WordSearchGrid\");","map":{"version":3,"names":["React","useState","WordSearchCell","jsxDEV","_jsxDEV","WordSearchGrid","grid","wordPositions","_s","selectedCells","setSelectedCells","isMouseDown","setIsMouseDown","toggleCellSelection","x","y","cellIndex","findIndex","cell","filter","handleMouseDown","handleMouseUp","handleMouseMove","className","children","map","row","rowIndex","colIndex","onMouseDown","onMouseUp","onMouseMove","isSelected","some","selectedCell","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ryanlacey/Documents/GitHub/ryans_puzzles/src/components/WordSearchCell.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './WordSearchGrid.css';\nimport WordSearchCell from './WordSearchCell';\n\nconst WordSearchGrid = ({ grid, wordPositions }) => {\n    const [selectedCells, setSelectedCells] = useState([]);\n    const [isMouseDown, setIsMouseDown] = useState(false);\n\n    const toggleCellSelection = (x, y) => {\n        const cellIndex = selectedCells.findIndex(cell => cell.x === x && cell.y === y);\n        if (cellIndex === -1) {\n            setSelectedCells([...selectedCells, { x, y }]);\n        } else {\n            setSelectedCells(selectedCells.filter(cell => cell.x !== x || cell.y !== y));\n        }\n    };\n\n    const handleMouseDown = () => {\n        setIsMouseDown(true);\n    };\n\n    const handleMouseUp = () => {\n        setIsMouseDown(false);\n    };\n\n    const handleMouseMove = (x, y) => {\n        if (isMouseDown) {\n            toggleCellSelection(x, y);\n        }\n    };\n\n    return (\n        <div className=\"grid-container\">\n            {grid.map((row, rowIndex) => (\n                <div key={rowIndex} className=\"grid-row\">\n                    {row.map((cell, colIndex) => (\n                        <div\n                            key={colIndex}\n                            onMouseDown={handleMouseDown}\n                            onMouseUp={handleMouseUp}\n                            onMouseMove={() => handleMouseMove(cell.x, cell.y)}\n                        >\n                            <WordSearchCell\n                                cell={cell}\n                                isSelected={selectedCells.some(selectedCell => selectedCell.x === cell.x && selectedCell.y === cell.y)}\n                            />\n                        </div>\n                    ))}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default WordSearchGrid;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,sBAAsB;AAC7B,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMY,mBAAmB,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;IAClC,MAAMC,SAAS,GAAGP,aAAa,CAACQ,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACJ,CAAC,KAAKA,CAAC,IAAII,IAAI,CAACH,CAAC,KAAKA,CAAC,CAAC;IAC/E,IAAIC,SAAS,KAAK,CAAC,CAAC,EAAE;MAClBN,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAE;QAAEK,CAAC;QAAEC;MAAE,CAAC,CAAC,CAAC;IAClD,CAAC,MAAM;MACHL,gBAAgB,CAACD,aAAa,CAACU,MAAM,CAACD,IAAI,IAAIA,IAAI,CAACJ,CAAC,KAAKA,CAAC,IAAII,IAAI,CAACH,CAAC,KAAKA,CAAC,CAAC,CAAC;IAChF;EACJ,CAAC;EAED,MAAMK,eAAe,GAAGA,CAAA,KAAM;IAC1BR,cAAc,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMS,aAAa,GAAGA,CAAA,KAAM;IACxBT,cAAc,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMU,eAAe,GAAGA,CAACR,CAAC,EAAEC,CAAC,KAAK;IAC9B,IAAIJ,WAAW,EAAE;MACbE,mBAAmB,CAACC,CAAC,EAAEC,CAAC,CAAC;IAC7B;EACJ,CAAC;EAED,oBACIX,OAAA;IAAKmB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC1BlB,IAAI,CAACmB,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,kBACpBvB,OAAA;MAAoBmB,SAAS,EAAC,UAAU;MAAAC,QAAA,EACnCE,GAAG,CAACD,GAAG,CAAC,CAACP,IAAI,EAAEU,QAAQ,kBACpBxB,OAAA;QAEIyB,WAAW,EAAET,eAAgB;QAC7BU,SAAS,EAAET,aAAc;QACzBU,WAAW,EAAEA,CAAA,KAAMT,eAAe,CAACJ,IAAI,CAACJ,CAAC,EAAEI,IAAI,CAACH,CAAC,CAAE;QAAAS,QAAA,eAEnDpB,OAAA,CAACF,cAAc;UACXgB,IAAI,EAAEA,IAAK;UACXc,UAAU,EAAEvB,aAAa,CAACwB,IAAI,CAACC,YAAY,IAAIA,YAAY,CAACpB,CAAC,KAAKI,IAAI,CAACJ,CAAC,IAAIoB,YAAY,CAACnB,CAAC,KAAKG,IAAI,CAACH,CAAC;QAAE;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1G;MAAC,GARGV,QAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASZ,CACR;IAAC,GAbIX,QAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAcb,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAC9B,EAAA,CAhDIH,cAAc;AAAAkC,EAAA,GAAdlC,cAAc;AAkDpB,eAAeA,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/ryanlacey/Documents/GitHub/ryans_puzzles/src/components/WordSearchGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './WordSearchGrid.css';\nimport WordSearchCell from './WordSearchCell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordSearchGrid = ({\n  grid,\n  wordPositions\n}) => {\n  _s();\n  const [selectedCells, setSelectedCells] = useState([]);\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const handleMouseDown = (x, y) => {\n    setIsMouseDown(true);\n    setSelectedCells([{\n      x,\n      y\n    }]);\n  };\n  const handleMouseUp = () => {\n    setIsMouseDown(false);\n    setSelectedCells([]);\n  };\n  const handleMouseEnter = (x, y) => {\n    if (isMouseDown) {\n      addSelectedCell(x, y);\n    }\n  };\n  const addSelectedCell = (x, y) => {\n    const cellIndex = selectedCells.findIndex(cell => cell.x === x && cell.y === y);\n    if (cellIndex === -1) {\n      setSelectedCells([...selectedCells, {\n        x,\n        y\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-container\",\n    onMouseUp: handleMouseUp,\n    children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-row\",\n      children: row.map((cell, colIndex) => {\n        const isSelected = selectedCells.some(selectedCell => selectedCell.x === cell.x && selectedCell.y === cell.y);\n        const isFound = wordPositions.some(wordPos => {\n          const {\n            startX,\n            startY,\n            endX,\n            endY\n          } = wordPos;\n          return x >= startX && x <= endX && y >= startY && y <= endY;\n        });\n        const classNames = `grid-cell ${isSelected ? 'highlighted' : ''} ${isFound ? 'found' : ''}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onMouseDown: () => handleMouseDown(cell.x, cell.y),\n          onMouseEnter: () => handleMouseEnter(cell.x, cell.y),\n          className: classNames,\n          children: /*#__PURE__*/_jsxDEV(WordSearchCell, {\n            cell: cell,\n            isSelected: isSelected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this)\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this);\n      })\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(WordSearchGrid, \"si7+Ik1Kxrz/ONK7ee9AXdvtCsM=\");\n_c = WordSearchGrid;\nexport default WordSearchGrid;\nvar _c;\n$RefreshReg$(_c, \"WordSearchGrid\");","map":{"version":3,"names":["React","useState","WordSearchCell","jsxDEV","_jsxDEV","WordSearchGrid","grid","wordPositions","_s","selectedCells","setSelectedCells","isMouseDown","setIsMouseDown","handleMouseDown","x","y","handleMouseUp","handleMouseEnter","addSelectedCell","cellIndex","findIndex","cell","className","onMouseUp","children","map","row","rowIndex","colIndex","isSelected","some","selectedCell","isFound","wordPos","startX","startY","endX","endY","classNames","onMouseDown","onMouseEnter","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ryanlacey/Documents/GitHub/ryans_puzzles/src/components/WordSearchGrid.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './WordSearchGrid.css';\nimport WordSearchCell from './WordSearchCell';\n\nconst WordSearchGrid = ({ grid, wordPositions }) => {\n    const [selectedCells, setSelectedCells] = useState([]);\n    const [isMouseDown, setIsMouseDown] = useState(false);\n\n    const handleMouseDown = (x, y) => {\n        setIsMouseDown(true);\n        setSelectedCells([{ x, y }]);\n    };\n\n    const handleMouseUp = () => {\n        setIsMouseDown(false);\n        setSelectedCells([]);\n    };\n\n    const handleMouseEnter = (x, y) => {\n        if (isMouseDown) {\n            addSelectedCell(x, y);\n        }\n    };\n\n    const addSelectedCell = (x, y) => {\n        const cellIndex = selectedCells.findIndex(cell => cell.x === x && cell.y === y);\n        if (cellIndex === -1) {\n            setSelectedCells([...selectedCells, { x, y }]);\n        }\n    };\n\n    return (\n        <div className=\"grid-container\" onMouseUp={handleMouseUp}>\n            {grid.map((row, rowIndex) => (\n                <div key={rowIndex} className=\"grid-row\">\n                    {row.map((cell, colIndex) => {\n                        const isSelected = selectedCells.some(selectedCell => selectedCell.x === cell.x && selectedCell.y === cell.y);\n                        const isFound = wordPositions.some(wordPos => {\n                            const { startX, startY, endX, endY } = wordPos;\n                            return x >= startX && x <= endX && y >= startY && y <= endY;\n                        });\n                        const classNames = `grid-cell ${isSelected ? 'highlighted' : ''} ${isFound ? 'found' : ''}`;\n                        return (\n                            <div\n                                key={colIndex}\n                                onMouseDown={() => handleMouseDown(cell.x, cell.y)}\n                                onMouseEnter={() => handleMouseEnter(cell.x, cell.y)}\n                                className={classNames}\n                            >\n                                <WordSearchCell\n                                    cell={cell}\n                                    isSelected={isSelected}\n                                />\n                            </div>\n                        );\n                    })}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default WordSearchGrid;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
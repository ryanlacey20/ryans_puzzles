{"ast":null,"code":"var _jsxFileName = \"/Users/ryanlacey/Documents/GitHub/ryans_puzzles/src/components/WordSearchCell.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './WordSearchCell.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordSearchCell = ({\n  cell\n}) => {\n  _s();\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [isSelected, setIsSelected] = useState(false);\n  const handleMouseDown = () => {\n    setIsMouseDown(true);\n    setIsSelected(true); // Select the cell when mouse is pressed down\n  };\n  const handleMouseEnter = () => {\n    if (isMouseDown) {\n      setIsSelected(true); // Select the cell when mouse is moved while pressed down\n    }\n  };\n  const handleMouseUp = () => {\n    setIsMouseDown(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `grid-cell ${isSelected ? 'selected' : ''}`,\n    onMouseDown: handleMouseDown,\n    onMouseEnter: handleMouseEnter,\n    onMouseUp: handleMouseUp,\n    children: cell.letter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(WordSearchCell, \"SVJo1lRLgeA+1Vp5iGu2eFfvQ5E=\");\n_c = WordSearchCell;\nexport default WordSearchCell;\nvar _c;\n$RefreshReg$(_c, \"WordSearchCell\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","WordSearchCell","cell","_s","isMouseDown","setIsMouseDown","isSelected","setIsSelected","handleMouseDown","handleMouseEnter","handleMouseUp","className","onMouseDown","onMouseEnter","onMouseUp","children","letter","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ryanlacey/Documents/GitHub/ryans_puzzles/src/components/WordSearchCell.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './WordSearchCell.css';\n\nconst WordSearchCell = ({ cell }) => {\n    const [isMouseDown, setIsMouseDown] = useState(false);\n    const [isSelected, setIsSelected] = useState(false);\n\n    const handleMouseDown = () => {\n        setIsMouseDown(true);\n        setIsSelected(true); // Select the cell when mouse is pressed down\n    };\n\n    const handleMouseEnter = () => {\n        if (isMouseDown) {\n            setIsSelected(true); // Select the cell when mouse is moved while pressed down\n        }\n    };\n\n    const handleMouseUp = () => {\n        setIsMouseDown(false);\n    };\n\n    return (\n        <div\n            className={`grid-cell ${isSelected ? 'selected' : ''}`}\n            onMouseDown={handleMouseDown}\n            onMouseEnter={handleMouseEnter}\n            onMouseUp={handleMouseUp}\n        >\n            {cell.letter}\n        </div>\n    );\n};\n\nexport default WordSearchCell;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMU,eAAe,GAAGA,CAAA,KAAM;IAC1BH,cAAc,CAAC,IAAI,CAAC;IACpBE,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,MAAME,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,IAAIL,WAAW,EAAE;MACbG,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB;EACJ,CAAC;EAED,MAAMG,aAAa,GAAGA,CAAA,KAAM;IACxBL,cAAc,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,oBACIL,OAAA;IACIW,SAAS,EAAG,aAAYL,UAAU,GAAG,UAAU,GAAG,EAAG,EAAE;IACvDM,WAAW,EAAEJ,eAAgB;IAC7BK,YAAY,EAAEJ,gBAAiB;IAC/BK,SAAS,EAAEJ,aAAc;IAAAK,QAAA,EAExBb,IAAI,CAACc;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEd,CAAC;AAACjB,EAAA,CA7BIF,cAAc;AAAAoB,EAAA,GAAdpB,cAAc;AA+BpB,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}